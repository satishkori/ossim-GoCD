//===================================================================================
// 
// File: rbt-test1.kwl
// Description: Contains assorted tests.
// 
// Control flags:
// Use 1 or true, 0 or false to turn on and off sections.
// Typically preprocess and expected results only turned on for first run.
// Clean commands should erase anything created by this test.
// Command order if flag turned on:
// 1) clean, 2) pre-process, 3) expected, 4) test, 5) post-process
// 
// NOTES:
// * The following environment variables must be set before running batch test:
//     OSSIM_BATCH_TEST_DATA     Top-level dir containing all test source data
//     OSSIM_BATCH_TEST_RESULTS  Top-level dir containing all test results (exp, 
//                               out and log),
// 
// * The variables OBT_EXP_DIR and OBT_OUT_DIR are assigned during run-time to
//   the proper paths according to the config filename. It isn't required to replace
//   these nor predefine them in the environment. You can leave them as is or modify
//   the paths to your unconventional file paths.
// 
// * In order to preserve platform independence, please utilize the following 
//   variables for the common OS commands when adding new commands to the test
//   configuration KWL file. Examples are provided in this template
//       $(DIFF_CMD) Use this var for windows "fc" or linux "diff"
//       $(COPY_CMD) Use this var for windows "copy" or linux "cp"
//       $(MKDIR_CMD) Use this var for windows "mkdir" or linux "mkdir"
//       $(RM_CMD) Use this var for windows "del /Q" or linux "rm -f"
//       $(RMDIR_CMD) Use this var for windows "rmdir /S /Q" or linux "rm -rf"
//   This application will set the environment variables to the proper values at 
//   runtime, so no need to worry about defining these.
// 
// * Use forward slashes "//", at beginning of line for comments.
// 
// * You can use existing environment variables as $(YOUR_VARIABLE). They will be 
//   expanded at run time if valid.
// 
// * Clean, preprocess, run, and accept test sections can be switched on or off
//   at run time.  These override config file flags.  Optional arguments are:
//      -c or --clean-test
//      -p or --preprocess-test
//      -r or --run-test
//      -a or --accept-test
//   Multiple tests can be entered by quoting string of space separated
//   test, e.g. "test1 test2". To accept all tests use "all" for test.
// 
//===================================================================================

// ---
// Begin test1:
// ---
test1.name: test1
test1.description: Info dump on PearData in tif format.
test1.enabled: 1

// Commands to generate expected results:

// Build overviews:
test1.expected_results_command0: ossim-preproc -r --ch $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/tif/2011Nov14_183759_190595_9d10c799a2fc11cc96c4d92728902500.tif

// Info dump to expected results dir:
test1.expected_results_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/tif/2011Nov14_183759_190595_9d10c799a2fc11cc96c4d92728902500.tif > $(OBT_EXP_DIR)/test1-info.txt

// Copy histogram to expected results dir:
test1.expected_results_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/tif/2011Nov14_183759_190595_9d10c799a2fc11cc96c4d92728902500.his $(OBT_EXP_DIR)/test1-his.txt


// The actual commands to test:

// Build overviews:
test1.test_command0: ossim-preproc -r --ch $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/tif/2011Nov14_183759_190595_9d10c799a2fc11cc96c4d92728902500.tif

// Info dump to output dir:
test1.test_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/tif/2011Nov14_183759_190595_9d10c799a2fc11cc96c4d92728902500.tif > $(OBT_OUT_DIR)/test1-info.txt

// Copy histogram to output dir:
test1.test_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/tif/2011Nov14_183759_190595_9d10c799a2fc11cc96c4d92728902500.his $(OBT_OUT_DIR)/test1-his.txt

// Post process commands for diffs and stuff:

// Test for info dump diffs:
test1.postprocess_command0: $(DIFF_CMD) $(OBT_EXP_DIR)/test1-info.txt $(OBT_OUT_DIR)/test1-info.txt

// Test for histogram diffs:
test1.postprocess_command1: $(DIFF_CMD) $(OBT_EXP_DIR)/test1-his.txt $(OBT_OUT_DIR)/test1-his.txt

// ---
// Begin test2:
// ---
test2.name: test2
test2.description: Info dump on PearData in nitf format:
test2.enabled: 1

// Commands to generate expected results:

// Build overviews:
test2.expected_results_command0: ossim-preproc -r --ch $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/ntf/2012-06-15/fdb92b8d-4b2b-11cd-bdff-7aee04bae290/2012Jun15_190646_190801_fe69546b4b2a11cd8bea7dcc2f902500.ntf

// Info dump to expected results dir:
test2.expected_results_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/ntf/2012-06-15/fdb92b8d-4b2b-11cd-bdff-7aee04bae290/2012Jun15_190646_190801_fe69546b4b2a11cd8bea7dcc2f902500.ntf > $(OBT_EXP_DIR)/test2-info.txt

// Copy histogram to expected results dir:
test2.expected_results_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/ntf/2012-06-15/fdb92b8d-4b2b-11cd-bdff-7aee04bae290/2012Jun15_190646_190801_fe69546b4b2a11cd8bea7dcc2f902500.his $(OBT_EXP_DIR)/test2-his.txt


// The actual commands to test:

// Build overviews:
test2.test_command0: ossim-preproc -r --ch $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/ntf/2012-06-15/fdb92b8d-4b2b-11cd-bdff-7aee04bae290/2012Jun15_190646_190801_fe69546b4b2a11cd8bea7dcc2f902500.ntf

// Info dump to output dir:
test2.test_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/ntf/2012-06-15/fdb92b8d-4b2b-11cd-bdff-7aee04bae290/2012Jun15_190646_190801_fe69546b4b2a11cd8bea7dcc2f902500.ntf > $(OBT_OUT_DIR)/test2-info.txt

// Copy histogram to output dir:
test2.test_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/pearl/ntf/2012-06-15/fdb92b8d-4b2b-11cd-bdff-7aee04bae290/2012Jun15_190646_190801_fe69546b4b2a11cd8bea7dcc2f902500.his $(OBT_OUT_DIR)/test2-his.txt

// Post process commands for diffs and stuff:

// Test for info dump diffs:
test2.postprocess_command0: $(DIFF_CMD) $(OBT_EXP_DIR)/test2-info.txt $(OBT_OUT_DIR)/test2-info.txt

// Test for histogram diffs:
test2.postprocess_command1: $(DIFF_CMD) $(OBT_EXP_DIR)/test2-his.txt $(OBT_OUT_DIR)/test2-his.txt

// ---
// Begin test3:
// ---
test3.name: test3
test3.description: Test height for center of image from test2 as it is affected by height.

// Clean up commands.
test3.clean_command0: $(RMDIR_CMD) $(OBT_EXP_DIR)/test3-info-height.txt
test3.clean_command1: $(RMDIR_CMD) $(OBT_OUT_DIR)/test3-info-height.txt

// Commands to generate expected results:

// Height center of image for test2
test3.expected_results_command0: ossim-info --height 36.808246127785395 -116.15390109680904 > $(OBT_EXP_DIR)/test3-info-height.txt

// The actual commands to test:

test3.test_command0: ossim-info --height 36.808246127785395 -116.15390109680904 > $(OBT_OUT_DIR)/test3-info-height.txt

// Post process commands for diffs and stuff:

test3.postprocess_command0: $(DIFF_CMD) $(OBT_EXP_DIR)/test3-info-height.txt $(OBT_OUT_DIR)/test3-info-height.txt
 
// ---
// End test3:
// ---


// ---
// Begin test4:
// ---
test4.name: test4
test4.description: Info dump on ACES_YOGI-HRI2 data.
test4.enabled: 1

// Commands to generate expected results:

// Build overviews:
test4.expected_results_command0: ossim-preproc -r --ch $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HRI/HRI_2/2012-06-15_20-00-29.HRI_2.Strip_00002.corrected.hri

// Info dump to expected results dir:
test4.expected_results_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HRI/HRI_2/2012-06-15_20-00-29.HRI_2.Strip_00002.corrected.hri > $(OBT_EXP_DIR)/test4-info.txt

// Copy histogram to expected results dir:
test4.expected_results_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HRI/HRI_2/2012-06-15_20-00-29.HRI_2.Strip_00002.corrected.his $(OBT_EXP_DIR)/test4-his.txt


// The actual commands to test:

// Build overviews:
test4.test_command0: ossim-preproc -r --ch $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HRI/HRI_2/2012-06-15_20-00-29.HRI_2.Strip_00002.corrected.hri

// Info dump to output dir:
test4.test_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HRI/HRI_2/2012-06-15_20-00-29.HRI_2.Strip_00002.corrected.hri > $(OBT_OUT_DIR)/test4-info.txt

// Copy histogram to output dir:
test4.test_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HRI/HRI_2/2012-06-15_20-00-29.HRI_2.Strip_00002.corrected.his $(OBT_OUT_DIR)/test4-his.txt

// Post process commands for diffs and stuff:

// Test for info dump diffs:
test4.postprocess_command0: $(DIFF_CMD) $(OBT_EXP_DIR)/test4-info.txt $(OBT_OUT_DIR)/test4-info.txt

// Test for histogram diffs:
test4.postprocess_command1: $(DIFF_CMD) $(OBT_EXP_DIR)/test4-his.txt $(OBT_OUT_DIR)/test4-his.txt

// ---
// End test4:
// ---


// ---
// Begin test5:
// ---
test5.name: test5
test5.description: Info dump on ACES_YOGI-HSI data.
test5.enabled: 1

// Commands to generate expected results:

// Build overviews:
test5.expected_results_command0: ossim-preproc -r --ch  $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.hsi

// Info dump to expected results dir:
test5.expected_results_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.hsi > $(OBT_EXP_DIR)/test5-info.txt

// Copy histogram to expected results dir:
test5.expected_results_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.his $(OBT_EXP_DIR)/test5-his.txt


// The actual commands to test:

// Build overviews:
test5.test_command0: ossim-preproc -r --ch $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.hsi

// Info dump to output dir:
test5.test_command1: ossim-info -d -i -p $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.hsi > $(OBT_OUT_DIR)/test5-info.txt

// Copy histogram to output dir:
test5.test_command2: $(COPY_CMD) $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.his $(OBT_OUT_DIR)/test5-his.txt

// Post process commands for diffs and stuff:

// Test for info dump diffs:
test5.postprocess_command0: $(DIFF_CMD) $(OBT_EXP_DIR)/test5-info.txt $(OBT_OUT_DIR)/test5-info.txt

// Test for histogram diffs:
test5.postprocess_command1: $(DIFF_CMD) $(OBT_EXP_DIR)/test5-his.txt $(OBT_OUT_DIR)/test5-his.txt

// ---
// End test5:
// ---


// ---
// Begin test6:
// ---
test6.name: test6
test6.description: orthoigen on ACES_YOGI-HSI data.
test6.enabled: 1

// Clean commands:
test6.clean_command0: $(RMDIR_CMD) $(OBT_EXP_DIR)/test6*
test6.clean_command1: $(RMDIR_CMD) $(OBT_OUT_DIR)/test6*

// Commands to generate expected results:

// Build overviews:
test6.expected_results_command0: ossim-orthoigen $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.hsi $(OBT_OUT_DIR)/test6-exp.tif

test6.expected_results_command1: ossim-preproc -r --ch $(OBT_OUT_DIR)/test6-exp.tif

// Info dump to expected results dir:
test6.expected_results_command2: ossim-info -d -i -p $(OBT_OUT_DIR)/test6-exp.tif > $(OBT_EXP_DIR)/test6-info.txt

// Copy histogram to expected results dir:
test6.expected_results_command3: $(COPY_CMD) $(OBT_OUT_DIR)/test6-exp.his $(OBT_EXP_DIR)/


// The actual commands to test:

// Build overviews:
test6.test_command0: ossim-orthoigen $(OSSIM_BATCH_TEST_DATA)/rbt/YOGI_PEARL3/2012-06-15/AM/ALPHA/2012-06-15_20-00-29/HSI/Scan_00004/2012-06-15_20-00-29.HSI.Scan_00004.scene.corrected.hsi $(OBT_OUT_DIR)/test6-out.tif

test6.test_command1: ossim-preproc -r --ch $(OBT_OUT_DIR)/test6-out.tif

// Info dump to output dir:
test6.test_command2: ossim-info -d -i -p $(OBT_OUT_DIR)/test6-out.tif > $(OBT_OUT_DIR)/test6-info.txt

// Post process commands for diffs and stuff:

// Test for info dump diffs:
test6.postprocess_command0: $(DIFF_CMD) $(OBT_EXP_DIR)/test6-info.txt $(OBT_OUT_DIR)/test6-info.txt

// Test for histogram diffs:
test6.postprocess_command1: $(DIFF_CMD) $(OBT_EXP_DIR)/test6-exp.his $(OBT_OUT_DIR)/test6-out.his

// ---
// End test6:
// ---



